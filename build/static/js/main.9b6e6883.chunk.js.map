{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","deleteNote","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","noteObject","post","request","updatedNote","id","put","delete","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialData","notesToShow","filter","map","find","changedNote","updatedData","catch","error","setTimeout","console","log","toggleImportanceOf","onSubmit","event","preventDefault","date","Date","toISOString","Math","random","addedData","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b6e6883.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance, deleteNote}) => {\n  const label = note.important ? 'make not imporant' : 'make important'\n\n  return(\n    <li className=\"note\"> \n      {note.content}\n      <button onClick={toggleImportance}>{label}</button> \n      <button onClick={deleteNote}> delete </button>\n    </li>\n    )\n  }\n\nexport default Note","import React from 'react'\n\nconst Notification = ({message}) => {\n    if (message === null){\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em> Note App, Department of Computer Science, University of Helsinki 2021</em>\n        </div>\n    )\n}\n\nexport default Footer","import axios from 'axios'\n\nconst baseUrl = \"/api/notes\"\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    //return request.then(request => request.data)\n    return request.then(response => response.data)\n}\n\nconst createNote = noteObject => {\n    const request = axios.post(baseUrl, noteObject)\n    return request.then(request => request.data)\n\n}\n\nconst updateNote = (updatedNote, id) => {\n    const request = axios.put(`${baseUrl}/${id}`, updatedNote)\n    return request.then(request => request.data)\n}\n\nconst deleteNote = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(request => request.data)\n}\n\n\nexport default {getAll, createNote, updateNote, deleteNote} ","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\n\nconst App = () => {\n  //states\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\"A new note\")\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  //function for getting notes\n  const hook = () => {\n    noteService.getAll()\n      .then(initialData => setNotes(initialData))\n  }\n\n  //effect for getting notes and saving to state\n  useEffect(hook, [])\n\n  //array of notes to show on screen\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  //function for toggling importance of notes\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(note => note.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService.updateNote(changedNote, id)\n      .then(updatedData => {\n        setNotes(notes.map(note => note.id !== id ? note : updatedData))\n      })\n      .catch(error => {\n        const message =`The note ${note.content} has already been deleted from the server`\n        setErrorMessage(message)\n        setTimeout( () => setErrorMessage(null), 5000)\n        setNotes(notes.filter(note => note.id !== id ))\n        console.log(error)\n      })\n  }\n\n  const deleteNote = (id) => {\n    noteService.deleteNote(id)\n      .catch(error => {\n        console.log(error)\n      })\n    setNotes(notes.filter(note => note.id !== id))\n  }\n\n  //function for adding a note\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject ={\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() <0.5\n    }\n\n    noteService.createNote(noteObject)\n      .then(addedData => {\n        setNewNote('')\n        setNotes(notes.concat(addedData))\n      })\n  }\n\n  //handling changes to the 'newNote' state\n  const handleNewNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n\n  //handling changes to the showAll state\n  const handleShowAllChange = (event) => {\n    setShowAll(!showAll)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <ul>\n        {notesToShow.map((note) => \n            <Note note={note} key={note.id} toggleImportance={() => toggleImportanceOf(note.id)} deleteNote={() => deleteNote(note.id)}/>\n            )\n        }\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n            value={newNote} \n            onChange={handleNewNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n      <button onClick={handleShowAllChange}>Show {showAll ? \"important\" : \"all\"}  </button>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}